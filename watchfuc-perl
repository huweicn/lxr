#!/usr/bin/perl
# $Id: find,v 1.3 1998/04/30 11:58:16 argggh Exp $

# find   --	Find files
#
#	Arne Georg Gleditsch <argggh@ifi.uio.no>
#	Per Kristian Gjermshus <pergj@ifi.uio.no>
#
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

######################################################################

#use lib 'lib/';
#use LXR::Common;
#use LXR::Config;
#use strict;
#use CGI qw(:all); 

#sub watchfuc {

$path0=$ARGV[2];
$path1=$ARGV[3];
$sourceroot=$ARGV[4];
$sh_ruby_source=$ARGV[5];
$baseurl=$ARGV[6];
$ddir=$ARGV[7];
$ver_v=$ARGV[0];
$ver_a=$ARGV[1];
$dbdir=sprintf($ddir."\/".$ver_v."\/".$ver_a."\/");

$s_v=sprintf("00");
$s_a=sprintf("11");
$s_v=$ver_v;
$s_a=$ver_a;
=head
    foreach ($Conf->allvariables) {
	if ($Conf->variable($_) ne $Conf->vardefault($_)) {
	    print("<input type=hidden name=\"",$_, "\" ",
		  "value=\"", $Conf->variable($_), "\">\n");
              if ($_ eq "v")
                { $s_v=sprintf($Conf->variable($_));}
              if ($_ eq "a")
                { $s_a=sprintf($Conf->variable($_));}
	}
    }	
=cut		       
#print("Path0: <input type=text name=\"string\" ",
 #        "value=\"",$path1,"\" size=20>\n",
#            "Path1: <input type=text name=\"string\" ",
#         "value=\"",$path0,"\" size=20>\n",
#         "<input type=submit value=\"callgraph\">\n",
#         "</from>\n\n");
=head
print("Path0: <input type=text name=\"path0\" ",
         "value=\"",$path0,"\" size=20 >\n");

print("Path1: <input type=text name=\"path1\" ",
         "value=\"",$path1,"\" size=20 >\n",
         "<input type=submit value=\"watchfuc\">\n",
         "</from>\n\n");
=cut
#print("vvvvv ",$s_a," *** ",$s_v," vvvv");
#      $temp_sh=sprintf($Conf->htmlhead);
#      $temp_out=$temp_sh;
     # $cache_filename=$temp_sh;
     # $cache_filename=~s/\/template-head//;
     # $cache_filename=$cache_filename."\/callgraph.appcache";
#      $temp_out=~s/\/http\/template-head//;
#      $temp_sh=~s/template-head/.\/watch.rb/;
      $temp_sh=sprintf($sh_ruby_source.".\/watch.rb");
#      $temp_soft=sprintf($Conf->htmlhead);
#      $temp_soft=~s/template-head/.\/soft_watch.rb/;
      $temp_soft=sprintf($sh_ruby_source.".\/soft_watch.rb");
#      $temp_source01=sprintf($Conf->sourceroot);
#         $temp_source0=$temp_source01;
#         $temp_source0=~s/$temp_out//;
#         $temp_source0=~s/linux\///;
     
#      $temp_source1=sprintf($Conf->baseurl);
       $temp_source1=$baseurl;
#      $temp_source1=~s/\/http\///;
#      $temp_source2=sprintf($temp_source1.$temp_source0);
      $temp_source2=sprintf($temp_source1."\/source1"."\/".$ver_v."\/".$ver_a."\/");

    if ($path0 ne "NULL" || $path1 ne "NULL")
        {
          
          if ($path1 ne "NULL" && $path0 ne "NULL")
            {
                $file_name=sprintf($path0."-".$path1.".list");
              #  print("**eee*****");
             }

           if ($path0 eq "root" && $path1 ne "NULL")
            {
               $file_name=sprintf("full-".$path1.".list");
             #  print("***********");
              # print($file_name);
            }
           if ($path0 ne "NULL" && $path1 eq "root")
            {
              $file_name=sprintf($path0."-full.list");
             }
              $file_name=~s/\//_/g;
              $file_name=~s/\.c/_c/g;
         }

#print($file_name);  

#  $temp_source1= sprintf($Conf->dbdir.$file_name);
       $temp_source1=sprintf($dbdir.$file_name);
#print("\n".$temp_source1."\n"); 
      if (-e $temp_source1)
       {

           print (" <iframe frameborder=\"0\" name=\"frame\" id=\"frame\" src=\"",$temp_source2,$file_name,"\" height=\"100%\" width=\"100%\" scrolling=\"auto\"></iframe>");
            print("<hr>\n");
      }
     else{
 
print("vvv");
          if ($path0 ne "NULL"|| $path1 ne "NULL") {
#              $temp_source01=sprintf($Conf->sourceroot);       
               $temp_source01=sprintf($sourceroot."\/".$ver_v."\/".$ver_a."\/linux\/");

           $temp_source02=sprintf("/var/www/doxy/files.html");
        # print($temp_source01);
         #$temp_source00=sprintf($Conf->d
# print("bbbbb");       
# system("./search.py");
# print("aaaaa");
              if ($path0 ne "NULL" && $path1 ne "NULL")
              {

            if($path0 eq "root" ||$path1 eq "root")
            {
             
                 if ($path0 eq "root")
                 {
      ###
                   if( $s_v eq "linux-3.5.4" && $s_a eq "i386-d")
                    {
                         #add new rb programe like system("$temp_sh $temp_source01 ....");(style like next "else")
                         #use new $temp_sh with new name watch.rb
                         #*********************
                         # print($temp_soft,"*1*",$temp_source01,"***",$path1,"****",$baseurl);  
                         system("$temp_soft $temp_source01 full $path1 $baseurl");
                     }
                     else
                     {
                         system("$temp_sh $temp_source01 full $path1 $temp_source02 $baseurl");

                     }
      ###
                 }#20120923
                 else
                 {

    ###
                    if ($s_v eq "linux-3.5.4" && $s_a eq "i386-d")
                    {
                         #add new rb programe like system("$temp_sh $temp_source01 ....");(style like next "else")
                         #use new $temp_sh with new name watch.rb
                         #**********************
                         system("$temp_soft $temp_source01 $path0 full $baseurl");
                     }
                     else
                    {
                         system("$temp_sh $temp_source01 $path0 full $temp_source02 $baseurl");

                    }
      ###


                 } #20121206      
            }
            else
            {
        #   if ($s_v eq "linux-3.5.4" and $s_a eq "i386-d")
        # { print($s_v,"***",$s_a);
    ###
         if (($s_v eq "linux-3.5.4") and ($s_a eq "i386-d"))
          {
            #add new rb programe like system("$temp_sh $temp_source01 ....");(style like next "else")
            #use new $temp_sh with new name watch.rb
            #********************
            #  print($temp_soft,"*3*",$temp_source01,"***",$path0,$path1,"****",$baseurl);#
               system("$temp_soft $temp_source01 $path0 $path1 $baseurl");
           }
          else
          {
              system("$temp_sh $temp_source01 $path0 $path1 $temp_source02 $baseurl"); #20120923
      
          }
      ###


            }
            

         }
         
}   #   system("dot -Tgif /usr/share/lxr/http/temp/net.graph -o /usr/share/lxr/http/temp/net.gif"); #20120923
      
 print (" <iframe frameborder=\"0\" name=\"frame\" id=\"frame\" src=\"",$temp_source2,$file_name,"\" height=\"100%\" width=\"100%\" scrolling=\"auto\"></iframe>");
        print("<hr>\n");

}
 

=head
	$sourceroot = $Conf->sourceroot;
	while($file = <FILELLISTING>) {
	    $file =~ s/^$sourceroot//;
	    if($file =~ /$path0 $path1/) {
		print(&fileref("$file", "/$file"),"<br>\n");
	    }
	} 
=cut  
#}


#(#$Conf, $HTTP, $Path) = &init;
#$path0 = $HTTP->{'param'}->{'path0'};
#$path1 = $HTTP->{'param'}->{'path1'};

#&makeheader('watchfuc');
#&watchfuc;
#&makefooter('watchfuc');


